Profitable Gamble
Easy
Once upon a time, there was a gambler named John who loved to take risks. One day, he came across a game where he could bet on a coin toss. If the coin landed heads up, he would win double his bet, but if the coin landed tails up, he would lose his entire bet.

John wondered if it was worth taking the risk to place a bet on this game. He knew he could use some basic probability and math to calculate the expected value of his bet and determine if it was profitable.

John wanted to use JavaScript to build a function that would take in his bet amount and the probability of winning, and calculate the expected value of his bet. He knew that if the expected value was greater than zero, the bet would be profitable, and if it was less than zero, the bet would not be worth taking.

John wondered how he could build a function in JavaScript that would accurately calculate the expected value of his bet, given the probability of winning and the potential payout. He thought about using a formula to calculate the expected value, but he wasn't sure what the formula should be or how to implement it in code.

Can you help John build a function in JavaScript that can accurately calculate the expected value of his bet, and determine if it's profitable to take the risk?

Example 1:
Input:
10, 0.5

Output:
Profitable gamble!

Example 2:
Input:
20, 0.3

Output:
Not worth the risk.



The Sleeping Beauty
Easy
Once upon a time, there was a beautiful princess who fell into a deep sleep that could only be broken by true love's kiss. The king, who was very worried about her daughter, wants to keep track of the number of hours the princess has been sleeping.

Write a JavaScript function named calculateSleepDuration that takes in two parameters:

startTime: a string in the format hh:mm representing the time when the princess went to sleep.
endTime: a string in the format hh:mm representing the time when the princess woke up.
The function should return a single number, representing the duration of the princess's sleep in hours. The duration should be rounded down to the nearest integer.

For example, if the startTime is "23:30" and the endTime is "07:45", the function should calculate the duration of the princess's sleep as 8 hours.

Please write the function calculateSleepDuration in JavaScript and ensure that it meets the requirements above.

Example 1:
Input:
22:30 22:45

Output:
0

Example 2:
Input:
23:00 01:00

Output:
2

Example 3:
Input:
23:00 05:00

Output:
6



Pattern Generator
Easy
Shaily is an innovative designer working on a project that requires generating a unique pattern based on a given input. She wants to implement a JavaScript function to create this unique pattern dynamically.

Help Shaily by writing a JavaScript function named generatePattern that takes a positive integer as input and generates a unique pattern based on that number.

To create the pattern, you can use a combination of symbols, numbers, and whitespace characters. Each line of the pattern should consist of a sequence of symbols repeated based on the corresponding line number. The symbols used can be customized based on the input number.

Example 1:
Input:
5

Output:
@

@@

@@@

@@@@

@@@@@

Example 2:
Input:
7

Output:
@

@@

@@@

@@@@

@@@@@

@@@@@@

@@@@@@@
