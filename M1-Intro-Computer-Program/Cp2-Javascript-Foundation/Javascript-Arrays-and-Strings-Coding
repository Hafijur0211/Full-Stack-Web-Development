Factorial
Easy
Alice is a math teacher who is teaching her students about factorials. She wants to create a JavaScript function that can calculate the factorial of a given number.

Help Alice by writing a function named factorial that takes a non-negative integer as input and returns the factorial of that number. The factorial of a number is the product of all positive integers from 1 to that number.

Example 1:
Input:
5

Output:
120

Example 2:
Input:
7

Output:
5040




Area of Shapes
Easy
Alice is a geometry teacher who wants to make it easier for her students to calculate the areas of different shapes. She decides to write a JavaScript program that can calculate the area of different shapes based on user input.

Alice's program should have a function called calculateArea that takes two arguments: shape and parameters. The shape argument should be a string that represents the shape whose area is to be calculated. The parameters argument should be an array that contains the necessary parameters for calculating the area of the specified shape.

Here are the shapes that Alice wants to support:

Rectangle: To calculate the area of a rectangle, the program should expect an array with two numbers representing the length and width of the rectangle.
Circle: To calculate the area of a circle, the program should expect an array with one number representing the radius of the circle.
Triangle: To calculate the area of a triangle, the program should expect an array with two numbers representing the base and height of the triangle.
Alice wants to ensure that the function is properly tested before she shares it with her students. So, she wants you to write at least three test cases for each of the shapes to ensure that the program is working correctly.

Can you help Alice by writing the calculateArea function and the necessary test cases?

Example 1:
Input:
'rectangle', [7, 3]

Output:
21

Example 2:
Input:
'circle', [5]

Output:
78.53981633974483

Example 3:
Input:
'triangle', [10, 6]

Output:
30

Example 4:
Input:
'square', [5]

Output:
Invalid shape




Days of the Week
Easy
Sam is a web developer and he wants to write a JavaScript function that will take in a date and return the corresponding day of the week. He decides to call his function getDayOfWeek.

Sam knows that JavaScript's Date object has a built-in method called getDay(), which returns the day of the week as a number (0 for Sunday, 1 for Monday, etc.). However, he wants to take it a step further and create a function that can handle any date input and return the day of the week as a string.

He starts by creating a new Date object using the input date string, and then uses the getDay() method to get the corresponding day of the week as a number. He then creates an array of strings representing the days of the week, and returns the appropriate string based on the index.

Example 1:
Input:
"2023-04-03"

Output:
Monday

Example 2:
Input:
2023-04-04

Output:
Tuesday
